{
    "name": "live",
    "jsondb": "db/v1.json",
    "auth": {
        "username": "admin",
        "password": "admin",
        "token": ""
    },
    "ffmpeg": {
        "options": {
            "audio_codec_copy": {
                "outputOptions": [
                    "-codec:a copy"
                ]
            },
            "audio_codec_copy_aac": {
                "outputOptions": [
                    "-codec:a copy",
                    "-bsf:a aac_adtstoasc"
                ]
            },
            "audio_codec_none": {
                "outputOptions": [
                    "-an"
                ]
            },
            "audio_codec_aac": {
                "outputOptions": [
                    "-codec:a aac",
                    "-bsf:a aac_adtstoasc"
                ]
            },
            "audio_codec_mp3": {
                "outputOptions": [
                    "-codec:a libmp3lame"
                ]
            },
            "audio_preset_copy": {
                "outputOptions": [
                    "-map 0:{audioid}"
                ]
            },
            "audio_preset_encode": {
                "outputOptions": [
                    "-b:a {bitrate}k"
                ]
            },
            "audio_preset_silence": {
                "input": "anullsrc=r={sampling}:cl={channels}",
                "inputOptions": [
                    "-f lavfi",
                    "-thread_queue_size 512"
                ],
                "outputOptions": [
                    "-map 1:a",
                    "-b:a {bitrate}k",
                    "-shortest"
                ]
            },
            "audio_filter_sampling": {
                "outputOptions": [
                    "-af aresample=osr={sampling}"
                ]
            },
            "audio_filter_channels": {
                "outputOptions": [
                    "-af aresample=ocl={channels}"
                ]
            },
            "audio_filter_all": {
                "outputOptions": [
                    "-af aresample=osr={sampling}:ocl={channels}"
                ]
            },
            "video_codec_copy": {
                "inputOptions": [],
                "outputOptions": [
                    "-map 0:{videoid}",
                    "-codec:v copy",
                    "-vsync 0",
                    "-copyts",
                    "-start_at_zero"
                ]
            },
            "video_codec_h264": {
                "inputOptions": [],
                "outputOptions": [
                    "-map 0:{videoid}",
                    "-codec:v libx264",
                    "-preset:v {preset}",
                    "-b:v {bitrate}k",
                    "-maxrate {bitrate}k",
                    "-bufsize {bitrate}k",
                    "-r {fps}",
                    "-g {gop}",
                    "-pix_fmt yuv420p",
                    "-vsync 1"
                ]
            },
            "video_codec_h264_profile": {
                "outputOptions": [
                    "-profile:v {profile}"
                ]
            },
            "video_codec_h264_tune": {
                "outputOptions": [
                    "-tune {tune}"
                ]
            },
            "video_codec_hevc": {
                "inputOptions": [],
                "outputOptions": [
                    "-map 0:{videoid}",
                    "-codec:v libx265",
                    "-preset:v {preset}",
                    "-b:v {bitrate}k",
                    "-maxrate {bitrate}k",
                    "-bufsize {bitrate}k",
                    "-r {fps}",
                    "-x265-params keyint={gop}",
                    "-vsync 1"
                ]
            },
            "global": {
                "inputOptions": [
                    "-stats",
                    "-v error",
                    "-stats_period 2s",
                    "-err_detect ignore_err",
                    "-fflags nobuffer+genpts"
                ]
            },
            "video": {
                "outputOptions": [
                    "-map_metadata -1"
                ]
            },
            "rtmp": {
                "outputOptions": [
                    "-f flv"
                ]
            },
            "rtmp-fflags": {
                "inputOptions": [
                    "-fflags nobuffer+genpts+igndts"
                ]
            },
            "hls": {
                "outputOptions": [
                    "-f hls",
                    "-hls_time {time}",
                    "-hls_list_size {listSize}",
                    "-hls_flags delete_segments+append_list",
                    "-hls_segment_type mpegts",
                    "-method {method}",
                    "-timeout {timeout}"
                ]
            },
            "hls_segment_ts": {
                "outputOptions": [
                    "-hls_segment_type mpegts",
                    "-hls_segment_filename /tmp/hls/live.stream_%09d.ts"
                ]
            },
            "hls_segment_fmp4": {
                "outputOptions": [
                    "-hls_segment_type fmp4",
                    "-hls_fmp4_init_filename live.stream_init.mp4",
                    "-hls_segment_filename /tmp/hls/live.stream_%09d.m4s"
                ]
            },
            "local_mpegts": {
                "outputOptions": [
                    "-f hls",
                    "-hls_flags delete_segments+append_list",
                    "-hls_segment_type mpegts"
                ]
            },
            "rtsp": {
                "inputOptions": [
                    "-stimeout 10000000"
                ]
            },
            "rtsp-tcp": {
                "inputOptions": [
                    "-rtsp_transport tcp"
                ]
            },
            "snapshot": {
                "outputOptions": [
                    "-vframes 1"
                ]
            }
        },
        "probe": {
            "timeout": 30000,
            "timeout_key": "-stimeout",
            "socket_timeout": "60000000"
        },
        "monitor": {
            "restart_wait": 10000,
            "stale_wait": 60000
        }
    },
    "nginx": {
        "command": "/usr/local/nginx/sbin/nginx",
        "args": [
            "-c",
            "/app/conf/nginx.conf"
        ],
        "args_ssl": [
            "-c",
            "/app/conf/nginx_ssl.conf"
        ],
        "streaming": {
            "ip": "localhost",
            "rtmp_port": "1935",
            "rtmp_hls_path": "/hls",
            "http_port": "8080",
            "http_health_path": "/ping"
        }
    },
    "envVars": [
        {
            "name": "RS_NODEJS_PORT",
            "alias": [
                "NODEJS_PORT"
            ],
            "type": "int",
            "defaultValue": "3000",
            "required": false,
            "description": "Webserver port of application."
        },
        {
            "name": "RS_NODEJS_ENV",
            "alias": [
                "NODE_ENV"
            ],
            "type": "string",
            "defaultValue": "prod",
            "required": false,
            "description": "Node.js Environment ('dev' or 'prod')."
        },
        {
            "name": "RS_LOGLEVEL",
            "alias": [],
            "type": "int",
            "defaultValue": "3",
            "required": false,
            "description": "Logging level (0=no logging, 1=ERROR, 2=WARN, 3=INFO, 4=DEBUG)."
        },
        {
            "name": "RS_TIMEZONE",
            "alias": [],
            "type": "string",
            "defaultValue": "Asia/Novokuznetsk",
            "required": false,
            "description": "Set the timezone. Accepts Olson timezone IDs."
        },
        {
            "name": "RS_SNAPSHOT_INTERVAL",
            "alias": [],
            "type": "string",
            "defaultValue": "0",
            "required": false,
            "description": "Interval for new snapshots (in milliseconds, use suffix 's' for seconds, 'm' for minutes). Use a value of 0 to disable snapshots."
        },
        {
            "name": "RS_USERNAME",
            "alias": [],
            "type": "string",
            "defaultValue": "admin",
            "required": false,
            "description": "Username for the backend."
        },
        {
            "name": "RS_PASSWORD",
            "alias": [
                "RESTREAMER_PASSWORD"
            ],
            "type": "string",
            "defaultValue": "admin",
            "required": false,
            "description": "Password for the backend."
        },
        {
            "name": "RS_TOKEN",
            "alias": [],
            "type": "string",
            "defaultValue": "",
            "required": false,
            "description": "Token for pushing an RTMP stream."
        },
        {
            "name": "RS_DEBUG_HEAPDUMPS",
            "alias": [
                "CREATE_HEAPDUMPS"
            ],
            "type": "bool",
            "defaultValue": "false",
            "required": false,
            "description": "Create heapdumps of application."
        },
        {
            "name": "RS_DEBUG",
            "alias": [],
            "type": "bool",
            "defaultValue": false,
            "required": false,
            "description": "Enables debug reporting."
        },
        {
            "name": "RS_AUDIO",
            "alias": [],
            "type": "string",
            "defaultValue": "auto",
            "required": false,
            "description": "Audio track handling: auto, none (remove audio), silence (force silence), aac (force AAC), mp3 (force MP3)."
        },
        {
            "name": "RS_HTTPS",
            "alias": [],
            "type": "bool",
            "defaultValue": "false",
            "required": false,
            "description": "Enables HTTPS support for admin interface and embeddable player."
        },
        {
            "name": "RS_INPUTSTREAM",
            "alias": [],
            "type": "string",
            "defaultValue": "",
            "required": false,
            "description": "Automatically start pulling from this stream on a fresh Restreamer installation."
        },
        {
            "name": "RS_OUTPUTSTREAM",
            "alias": [],
            "type": "string",
            "defaultValue": "",
            "required": false,
            "description": "Automatically start pushing to this stream on a fresh Restreamer installation."
        }
    ]
}